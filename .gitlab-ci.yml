image: golang:latest

variables:
  # Please edit to your GitLab project
  REPO_NAME: github.com/degica/barcelona-cli
  GLIDE_VERSION: 0.13.3

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME
  - wget https://github.com/Masterminds/glide/releases/download/v${GLIDE_VERSION}/glide-v${GLIDE_VERSION}-linux-amd64.tar.gz
  - tar -xf glide-v${GLIDE_VERSION}-linux-amd64.tar.gz
  - export PATH="$(pwd)/linux-amd64:$GOPATH/bin:$PATH"

stages:
  - test
  - build

test:
  stage: test
  script:
    - make check

build:
  stage: build
  script:
    - pwd
    - glide install
    - make
  artifacts:
    paths:
      - bcn
